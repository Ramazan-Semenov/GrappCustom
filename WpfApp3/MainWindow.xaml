<Window x:Class="WpfApp3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <local:TreeViewLineConverter x:Key="LineConverter"/>

        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" >
                            <Rectangle Width="9" Height="9" Stroke="#919191" Fill="Transparent" >
                                <!--<Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>-->
                            </Rectangle>
                            <Rectangle x:Name="ExpandPath" Fill="Transparent" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <Rectangle Width="5" Height="1" Fill="Transparent" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeViewItem x:Key="{x:Type TreeViewItem}"  -->
        <Style x:Key="Tr" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding"  Value="20 10 0 0"/>

            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />

            <Setter Property="IsExpanded" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Margin="0,1,-100,0"  Height="1" Width="50" Stroke="Gray"  Fill="Transparent" />
                            <Rectangle x:Name="VerLn" Width="1"  Stroke="Gray" Margin="50,0,0,0" Grid.RowSpan="2" Fill="Transparent" />
                            <!--<Rectangle  Width="1"  Stroke="Gray" Margin="50,10,0,79" Grid.RowSpan="2" Fill="Transparent" />-->

                            <ToggleButton  Margin="50,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border  Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="80"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                            </Trigger>
                          
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="False">
                    <Setter Property="Background" Value="Aquamarine" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="в" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Background" Value="Bisque"/>
            </Style.Setters>
        </Style>
    </Window.Resources>
    <Grid><!--ItemsSource="{Binding node.Child}"-->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel  HorizontalAlignment="Right">
            <Button Grid.Row="0" MinWidth="100" Width="150" Height="150"   Background="Transparent" Content="{Binding node.Name}"></Button>

            <Rectangle Grid.Row="1"  Fill="Black" Height="140" Width="1"></Rectangle>

        </StackPanel>
          <TreeView Background="Transparent" Margin="0 -59 0 0" Grid.Row="2" ItemContainerStyle="{Binding Source={StaticResource Tr}}" BorderThickness="0" x:Name="ff"   >
            <!--<TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </TreeView.ItemContainerStyle>-->
            <TreeView.Resources>

                <CollectionViewSource x:Key="child" Source="{Binding node.Child}"/>
                <HierarchicalDataTemplate DataType="{x:Type local:Node}" ItemsSource="{Binding Child}">
                    <Border Background="White" MinWidth="100" Width="auto" Height="150"  CornerRadius="10" BorderBrush="Black" BorderThickness="0.5">

                        <Grid  Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                            <Grid>
                                <Grid.LayoutTransform>
                                    <RotateTransform Angle="-90"></RotateTransform>

                                </Grid.LayoutTransform>
                                <StackPanel>
                                    <TextBlock  TextWrapping="Wrap" Text="{Binding level.id , StringFormat={}id: {0}}"/>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding level.product_name}"/>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding level.owner}"/>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding level.product_type}"/>
                                </StackPanel>

                            </Grid>
                        </Grid>
                        <Border.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Добавить"></MenuItem>
                                <MenuItem Header="Изменить"></MenuItem>
                                <MenuItem Header="Удалить" CommandParameter="{Binding}" Click="MenuItem_Click"  ></MenuItem>
                            </ContextMenu>
                        </Border.ContextMenu>
                    </Border>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
            <TreeView.ItemsSource >

                <CompositeCollection >

                    <Border Background="White" MinWidth="100" Width="auto" Height="150"  CornerRadius="10" BorderBrush="Black" BorderThickness="0.5">

                        <Grid  Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                            <Grid>
                                <Grid.LayoutTransform>
                                    <RotateTransform Angle="-90"></RotateTransform>

                                </Grid.LayoutTransform>
                                <StackPanel>
                                    <TextBlock TextWrapping="Wrap" Text="ert"/>
                                </StackPanel>

                            </Grid>
                        </Grid>
                        <Border.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Добавить"></MenuItem>
                                <MenuItem Header="Изменить"></MenuItem>
                                <MenuItem Header="Удалить"></MenuItem>
                            </ContextMenu>
                        </Border.ContextMenu>
                    </Border>


                    <CollectionContainer Collection="{Binding Source={StaticResource child}}">


                    </CollectionContainer>
                </CompositeCollection>
            </TreeView.ItemsSource>
            <!--<TreeView.Resources>
                   
                    <HierarchicalDataTemplate DataType="{x:Type local:Node}" ItemsSource="{Binding Child}">
                        <Border Background="White" MinWidth="100" Width="auto" Height="150"  CornerRadius="10" BorderBrush="Black" BorderThickness="0.5">

                            <Grid  Background="Transparent"   VerticalAlignment="Center" HorizontalAlignment="Center"   >
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <RotateTransform Angle="-90"></RotateTransform>

                                    </Grid.LayoutTransform>
                                    <StackPanel>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding level.id}"/>
                                    </StackPanel>

                                </Grid>
                            </Grid>
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>-->
            <TreeView.LayoutTransform>
                <RotateTransform Angle="90"/>
            </TreeView.LayoutTransform>
            <!--<TreeView.ItemTemplate>
                                  
                    <HierarchicalDataTemplate ItemsSource="{Binding Child}">
                    <Border Background="White" MinWidth="100" Width="auto" Height="150"  CornerRadius="10" BorderBrush="Black" BorderThickness="0.5">

                            <Grid  Background="Transparent"   VerticalAlignment="Center" HorizontalAlignment="Center"   >
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <RotateTransform Angle="-90"></RotateTransform>

                                    </Grid.LayoutTransform>
                                    <StackPanel>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding level.id}"/>
                                    </StackPanel>

                                </Grid>
                            </Grid>
                        </Border>
                </HierarchicalDataTemplate>
                    
            </TreeView.ItemTemplate>-->
        </TreeView>

    </Grid>
</Window>